/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as PineappleIndexImport } from './routes/pineapple/index'
import { Route as KiwiIndexImport } from './routes/kiwi/index'
import { Route as AboutIndexImport } from './routes/about/index'
import { Route as PineappleIdImport } from './routes/pineapple/$id_'
import { Route as KiwiIdImport } from './routes/kiwi/$id_'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PineappleIndexRoute = PineappleIndexImport.update({
  id: '/pineapple/',
  path: '/pineapple/',
  getParentRoute: () => rootRoute,
} as any)

const KiwiIndexRoute = KiwiIndexImport.update({
  id: '/kiwi/',
  path: '/kiwi/',
  getParentRoute: () => rootRoute,
} as any)

const AboutIndexRoute = AboutIndexImport.update({
  id: '/about/',
  path: '/about/',
  getParentRoute: () => rootRoute,
} as any)

const PineappleIdRoute = PineappleIdImport.update({
  id: '/pineapple/$id_',
  path: '/pineapple/$id',
  getParentRoute: () => rootRoute,
} as any)

const KiwiIdRoute = KiwiIdImport.update({
  id: '/kiwi/$id_',
  path: '/kiwi/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/kiwi/$id_': {
      id: '/kiwi/$id_'
      path: '/kiwi/$id'
      fullPath: '/kiwi/$id'
      preLoaderRoute: typeof KiwiIdImport
      parentRoute: typeof rootRoute
    }
    '/pineapple/$id_': {
      id: '/pineapple/$id_'
      path: '/pineapple/$id'
      fullPath: '/pineapple/$id'
      preLoaderRoute: typeof PineappleIdImport
      parentRoute: typeof rootRoute
    }
    '/about/': {
      id: '/about/'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutIndexImport
      parentRoute: typeof rootRoute
    }
    '/kiwi/': {
      id: '/kiwi/'
      path: '/kiwi'
      fullPath: '/kiwi'
      preLoaderRoute: typeof KiwiIndexImport
      parentRoute: typeof rootRoute
    }
    '/pineapple/': {
      id: '/pineapple/'
      path: '/pineapple'
      fullPath: '/pineapple'
      preLoaderRoute: typeof PineappleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/kiwi/$id': typeof KiwiIdRoute
  '/pineapple/$id': typeof PineappleIdRoute
  '/about': typeof AboutIndexRoute
  '/kiwi': typeof KiwiIndexRoute
  '/pineapple': typeof PineappleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/kiwi/$id': typeof KiwiIdRoute
  '/pineapple/$id': typeof PineappleIdRoute
  '/about': typeof AboutIndexRoute
  '/kiwi': typeof KiwiIndexRoute
  '/pineapple': typeof PineappleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/kiwi/$id_': typeof KiwiIdRoute
  '/pineapple/$id_': typeof PineappleIdRoute
  '/about/': typeof AboutIndexRoute
  '/kiwi/': typeof KiwiIndexRoute
  '/pineapple/': typeof PineappleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/kiwi/$id'
    | '/pineapple/$id'
    | '/about'
    | '/kiwi'
    | '/pineapple'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/kiwi/$id' | '/pineapple/$id' | '/about' | '/kiwi' | '/pineapple'
  id:
    | '__root__'
    | '/'
    | '/kiwi/$id_'
    | '/pineapple/$id_'
    | '/about/'
    | '/kiwi/'
    | '/pineapple/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  KiwiIdRoute: typeof KiwiIdRoute
  PineappleIdRoute: typeof PineappleIdRoute
  AboutIndexRoute: typeof AboutIndexRoute
  KiwiIndexRoute: typeof KiwiIndexRoute
  PineappleIndexRoute: typeof PineappleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  KiwiIdRoute: KiwiIdRoute,
  PineappleIdRoute: PineappleIdRoute,
  AboutIndexRoute: AboutIndexRoute,
  KiwiIndexRoute: KiwiIndexRoute,
  PineappleIndexRoute: PineappleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/kiwi/$id_",
        "/pineapple/$id_",
        "/about/",
        "/kiwi/",
        "/pineapple/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/kiwi/$id_": {
      "filePath": "kiwi/$id_.tsx"
    },
    "/pineapple/$id_": {
      "filePath": "pineapple/$id_.tsx"
    },
    "/about/": {
      "filePath": "about/index.tsx"
    },
    "/kiwi/": {
      "filePath": "kiwi/index.tsx"
    },
    "/pineapple/": {
      "filePath": "pineapple/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
